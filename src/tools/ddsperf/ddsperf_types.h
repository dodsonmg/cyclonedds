/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: ddsperf_types.h
  Source: ddsperf_types.idl
  Cyclone DDS: V0.5.0

*****************************************************************/

#include "dds/ddsc/dds_public_impl.h"

#ifndef _DDSL_DDSPERF_TYPES_H_
#define _DDSL_DDSPERF_TYPES_H_


#ifdef __cplusplus
extern "C" {
#endif


typedef struct OneULong
{
  uint32_t seq;
} OneULong;

extern const dds_topic_descriptor_t OneULong_desc;

#define OneULong__alloc() \
((OneULong*) dds_alloc (sizeof (OneULong)));

#define OneULong_free(d,o) \
dds_sample_free ((d), &OneULong_desc, (o))


typedef struct Unkeyed16
{
  uint32_t seq;
  uint8_t baggage[12];
} Unkeyed16;

extern const dds_topic_descriptor_t Unkeyed16_desc;

#define Unkeyed16__alloc() \
((Unkeyed16*) dds_alloc (sizeof (Unkeyed16)));

#define Unkeyed16_free(d,o) \
dds_sample_free ((d), &Unkeyed16_desc, (o))


typedef struct Unkeyed1024
{
  uint32_t seq;
  uint8_t baggage[1020];
} Unkeyed1024;

extern const dds_topic_descriptor_t Unkeyed1024_desc;

#define Unkeyed1024__alloc() \
((Unkeyed1024*) dds_alloc (sizeof (Unkeyed1024)));

#define Unkeyed1024_free(d,o) \
dds_sample_free ((d), &Unkeyed1024_desc, (o))


typedef struct Keyed32
{
  uint32_t seq;
  uint32_t keyval;
  uint8_t baggage[24];
} Keyed32;

extern const dds_topic_descriptor_t Keyed32_desc;

#define Keyed32__alloc() \
((Keyed32*) dds_alloc (sizeof (Keyed32)));

#define Keyed32_free(d,o) \
dds_sample_free ((d), &Keyed32_desc, (o))


typedef struct Keyed256
{
  uint32_t seq;
  uint32_t keyval;
  uint8_t baggage[248];
} Keyed256;

extern const dds_topic_descriptor_t Keyed256_desc;

#define Keyed256__alloc() \
((Keyed256*) dds_alloc (sizeof (Keyed256)));

#define Keyed256_free(d,o) \
dds_sample_free ((d), &Keyed256_desc, (o))


typedef struct KeyedSeq
{
  uint32_t seq;
  uint32_t keyval;
  dds_sequence_t baggage;
} KeyedSeq;

extern const dds_topic_descriptor_t KeyedSeq_desc;

#define KeyedSeq__alloc() \
((KeyedSeq*) dds_alloc (sizeof (KeyedSeq)));

#define KeyedSeq_free(d,o) \
dds_sample_free ((d), &KeyedSeq_desc, (o))


typedef struct CPUStatThread
{
  char * name;
  int32_t u_pct;
  int32_t s_pct;
} CPUStatThread;


typedef struct CPUStats_cpu_seq
{
  uint32_t _maximum;
  uint32_t _length;
  CPUStatThread *_buffer;
  bool _release;
} CPUStats_cpu_seq;

#define CPUStats_cpu_seq__alloc() \
((CPUStats_cpu_seq*) dds_alloc (sizeof (CPUStats_cpu_seq)));

#define CPUStats_cpu_seq_allocbuf(l) \
((CPUStatThread *) dds_alloc ((l) * sizeof (CPUStatThread)))


typedef struct CPUStats
{
  char * hostname;
  uint32_t pid;
  double maxrss;
  uint32_t vcsw;
  uint32_t ivcsw;
  bool some_above;
  CPUStats_cpu_seq cpu;
} CPUStats;

extern const dds_topic_descriptor_t CPUStats_desc;

#define CPUStats__alloc() \
((CPUStats*) dds_alloc (sizeof (CPUStats)));

#define CPUStats_free(d,o) \
dds_sample_free ((d), &CPUStats_desc, (o))

#ifdef __cplusplus
}
#endif
#endif /* _DDSL_DDSPERF_TYPES_H_ */
